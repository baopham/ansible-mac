set -g default-terminal "screen-256color"

set-window-option -g xterm-keys on

# Change prefix key to `
set-option -g prefix `
unbind C-b
bind-key ` send-prefix
# we might need ` at some point, allow switching
bind-key C-a set-option -g prefix C-a
bind-key C-b set-option -g prefix `

# Default key repeat is 500ms, lower to 125ms
# otherwise hitting up arrow right after moving to new window counts
# as moving back to window above
set -g repeat-time 125

# Count from 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# More straight forward key bindings for splitting
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'

# Vim style movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vim key in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection

# History
set -g history-limit 1000

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S: #W'

# Notifying if other windows has activities
set -g visual-activity on

# Window modes color
setw -g mode-bg colour240
setw -g mode-fg colour255

# Message/command input colors
set -g message-bg colour240
set -g message-fg colour255

# Clock
setw -g clock-mode-colour colour250
setw -g clock-mode-style 12

# Mouse support
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M


# More custom binding
bind < resize-pane -L 3
bind > resize-pane -R 3
bind - resize-pane -D 3
bind + resize-pane -U 3
bind H command-prompt "resize-pane -L %1"
bind J command-prompt "resize-pane -D %1"
bind K command-prompt "resize-pane -U %1"
bind L command-prompt "resize-pane -R %1"
bind . command-prompt
bind q confirm kill-window
bind Q confirm kill-server
bind space command-prompt -p index "select-window -t %1"
bind tab next-layout
bind r source-file ~/.tmux.conf

# Make tmux work with system clipboard
# See: https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Status bar
set -g status on
#set -g status-utf8 on
set -g status-interval 2
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 250
set -g status-left '#[fg=white,bg=colour39,noreverse,bold] ❐ #S  #I:#P  #W#F '
set -g status-right ''
set -g status-right-length 150

# Inactive windows in status bar
set-window-option -g window-status-format ' #[fg=cyan,dim]#I#[default]:#W#[fg=grey,dim]#F'

# Current or active window in status bar
set-window-option -g window-status-current-format ''

set-window-option -g window-status-fg colour249
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-bell-attr none
set-window-option -g window-status-activity-fg yellow
set-window-option -g window-status-bell-fg red

